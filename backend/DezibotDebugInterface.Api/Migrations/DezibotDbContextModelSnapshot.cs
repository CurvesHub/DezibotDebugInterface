// <auto-generated />
using System;
using DezibotDebugInterface.Api.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DezibotDebugInterface.Api.Migrations
{
    [DbContext(typeof(DezibotDbContext))]
    partial class DezibotDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("DezibotDebugInterface.Api.DataAccess.Dezibot", b =>
                {
                    b.Property<string>("Ip")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastConnectionUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Ip");

                    b.ToTable("Dezibots");
                });

            modelBuilder.Entity("DezibotDebugInterface.Api.DataAccess.Dezibot", b =>
                {
                    b.OwnsMany("DezibotDebugInterface.Api.DataAccess.Dezibot+Class", "Classes", b1 =>
                        {
                            b1.Property<string>("DezibotIp")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Name")
                                .HasColumnType("TEXT");

                            b1.HasKey("DezibotIp", "Name");

                            b1.ToTable("DezibotClasses", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("DezibotIp");

                            b1.OwnsMany("DezibotDebugInterface.Api.DataAccess.Dezibot+Class+Property", "Properties", b2 =>
                                {
                                    b2.Property<string>("DezibotIp")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("ClassName")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("Name")
                                        .HasColumnType("TEXT");

                                    b2.HasKey("DezibotIp", "ClassName", "Name");

                                    b2.ToTable("DezibotClassProperties", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("DezibotIp", "ClassName");

                                    b2.OwnsMany("DezibotDebugInterface.Api.DataAccess.Dezibot+Class+Property+TimeValue", "Values", b3 =>
                                        {
                                            b3.Property<string>("DezibotIp")
                                                .HasColumnType("TEXT");

                                            b3.Property<string>("ClassName")
                                                .HasColumnType("TEXT");

                                            b3.Property<string>("PropertyName")
                                                .HasColumnType("TEXT");

                                            b3.Property<DateTime>("TimestampUtc")
                                                .HasColumnType("TEXT");

                                            b3.Property<string>("Value")
                                                .IsRequired()
                                                .HasColumnType("TEXT");

                                            b3.HasKey("DezibotIp", "ClassName", "PropertyName", "TimestampUtc");

                                            b3.ToTable("DezibotPropertyValues", (string)null);

                                            b3.WithOwner()
                                                .HasForeignKey("DezibotIp", "ClassName", "PropertyName");
                                        });

                                    b2.Navigation("Values");
                                });

                            b1.Navigation("Properties");
                        });

                    b.OwnsMany("DezibotDebugInterface.Api.DataAccess.Dezibot+LogEntry", "Logs", b1 =>
                        {
                            b1.Property<string>("DezibotIp")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("TimestampUtc")
                                .HasColumnType("TEXT");

                            b1.Property<string>("ClassName")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Data")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Message")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("DezibotIp", "TimestampUtc");

                            b1.ToTable("DezibotLogs", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("DezibotIp");
                        });

                    b.Navigation("Classes");

                    b.Navigation("Logs");
                });
#pragma warning restore 612, 618
        }
    }
}
